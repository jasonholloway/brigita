<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ assembly name="$(SolutionDir)Brigita.Domain\bin\debug\brigita.domain.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Brigita.Domain" #>
<#@ import namespace="Brigita.Domain.Dtos" #>
<#+
	void GenerateDto<TInt>(string name, string @namespace, string[] otherNamespaces = null) 
	{		
		var tInt = typeof(TInt);

		var typeScriber = new TypeScriber(
									new[] { @namespace }
									.Concat(new[] { tInt.Namespace })
									.Concat(otherNamespaces ?? new string[0]));



		//should check interface here...

		foreach(var ns in typeScriber.Namespaces.Skip(1).OrderBy(s => s)) {
#>using <#=ns#>;
<#+
        }

#>

namespace <#=@namespace#> {

	class <#=name#> : <#=tInt.Name#>
	{
<#+
		foreach(var prop in tInt.GetProperties()) {
#>
		public <#=typeScriber.WriteType(prop.PropertyType)#> <#=prop.Name#> { get; set; }
<#+
        }
		#>
	}
}
<#+
    }
#>
