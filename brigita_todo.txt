TO DO:
> Rework teaser page handler - direct repo access
> Price to be displayed
	- via some helper method probably
> Shopping cart
	- investigate how NOP does it.
		obviously a cookie is used, perhaps even before the user logs in (this would be the best way)


> 404 to be served
> Vertically slice folders
> Nice routes via dictionary of titles
> Localized route shortcuts (ie produkti)
> Only published products to be displayed
> ILocalizable interface to replace IEntity


DONE:
> Set ambient thread culture DONE
> Html.CurrencyValue needs finishing DONE
> Currency localization DONE
> Localization service to be better encapsulated DONE
> Translate to query bus DONE
> Generate URLs with locale DONE
> Get page links working nicely DONE
> Populate db with lots of products to test paging DONE
> Basic product detail pages DONE
> Language detection DONE
> Populate models with localized strings (eugh!) DONE
> Menu links stack up incorrectly DONE
> ActiveParent wrongly appearing on active menu item DONE
> Images to be sourced and templated DONE





Question of whether to populate teasers directly from handlers (yes!) or delegate to dom layer.

Almost certainly prefer direct population: less complexity, yes?






LANGUAGE DETECTION!!!!!





*************************************************

Localized strings should be in the served domain model.... or at least the model should expose methods for getting localized info.

As is, Nop leaves this dreck for the presentation layer to spasm through, in a very ugly manner.

Nop really wants to do this at the ViewModel layer, and does so, but as this entire layer in submerged in the MVC stuff, it appears there via gruesome extension methods.




**************************************************

Dapper's all well and good, but we'll really be relying on caching to speed us up. As such, we have no pressing need
to fuck around with SQL, as happy as it may be.

The existing EF-based data layer can be reused, with a few small tweaks. 
	> NO LAZY LOADING!
	> Expose the Include function
	
	
Some NOP services will be best rerouted via simpler interfaces, so as to make cacheing that bit simpler.