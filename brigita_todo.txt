TO DO:

> Translate to Query bus, and to vertically-sliced folders
> Price to be displayed, in correct currency taken from locale
> Shopping cart
	- investigate how NOP does it.
		obviously a cookie is used, perhaps even before the user logs in (this would be the best way)

> Nice routes via dictionary of titles
> Localized route shortcuts (ie produkti)
> Only published products to be displayed


DONE:
> Generate URLs with locale DONE
> Get page links working nicely DONE
> Populate db with lots of products to test paging DONE
> Basic product detail pages DONE
> Language detection DONE
> Populate models with localized strings (eugh!) DONE
> Menu links stack up incorrectly DONE
> ActiveParent wrongly appearing on active menu item DONE
> Images to be sourced and templated DONE






LANGUAGE DETECTION!!!!!





*************************************************

Localized strings should be in the served domain model.... or at least the model should expose methods for getting localized info.

As is, Nop leaves this dreck for the presentation layer to spasm through, in a very ugly manner.

Nop really wants to do this at the ViewModel layer, and does so, but as this entire layer in submerged in the MVC stuff, it appears there via gruesome extension methods.




**************************************************

Dapper's all well and good, but we'll really be relying on caching to speed us up. As such, we have no pressing need
to fuck around with SQL, as happy as it may be.

The existing EF-based data layer can be reused, with a few small tweaks. 
	> NO LAZY LOADING!
	> Expose the Include function
	
	
Some NOP services will be best rerouted via simpler interfaces, so as to make cacheing that bit simpler.